{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\FYP-FrontEnd\\\\FYP_Frontend\\\\FYP Bespoke\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.interceptors.request.use(response => {\n  document.body.classList.add('loading-indicator');\n  return response;\n}, error => {\n  document.body.classList.remove('loading-indicator');\n  console.log(\"error \" + error);\n  return Promise.reject(error);\n});\n\n// here logic will be written aganist token check \naxios.interceptors.response.use(response => {\n  document.body.classList.remove('loading-indicator');\n  return response;\n}, error => {\n  document.body.classList.remove('loading-indicator');\n\n  // if(error.response.status === 400 ){\n  // toast.error('Action Failed', {\n  //   position: \"bottom-right\",\n  //   autoClose: 2000,\n  //   hideProgressBar: false,\n  //   closeOnClick: true,\n  //   });\n  // } \n  //   if(error.response.status === 401 ){\n  //   Swal.fire({\n  //     icon: 'error',\n  //     title: 'Oops...',\n  //     text: `Unathorized for this Request`,\n  //   }).then(()=>{\n  //     authServices.logOut();\n  //   })\n  // }\n\n  //   if(error.response.status === 500 ){\n  //   Swal.fire({\n  //     icon: 'error',\n  //     title: 'Oops...',\n  //     text: `Oops Something Went Wrong`,\n  //   })\n\n  // }\n\n  return Promise.reject(error);\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","axios","interceptors","request","use","response","document","body","classList","add","error","remove","console","log","Promise","reject","root","createRoot","getElementById","render"],"sources":["C:/Users/hp/Desktop/FYP-FrontEnd/FYP_Frontend/FYP Bespoke/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\naxios.interceptors.request.use((response)=>{\r\n  document.body.classList.add('loading-indicator');\r\n  return response;\r\n},(error) =>{\r\n  document.body.classList.remove('loading-indicator');\r\n  console.log(\"error \"+error);\r\n  return Promise.reject(error);\r\n}\r\n)\r\n\r\n// here logic will be written aganist token check \r\naxios.interceptors.response.use((response)=>{\r\n  document.body.classList.remove('loading-indicator');\r\n  return response;\r\n},(error)=>{\r\n  document.body.classList.remove('loading-indicator');\r\n\r\n  // if(error.response.status === 400 ){\r\n  // toast.error('Action Failed', {\r\n  //   position: \"bottom-right\",\r\n  //   autoClose: 2000,\r\n  //   hideProgressBar: false,\r\n  //   closeOnClick: true,\r\n  //   });\r\n  // } \r\n  //   if(error.response.status === 401 ){\r\n  //   Swal.fire({\r\n  //     icon: 'error',\r\n  //     title: 'Oops...',\r\n  //     text: `Unathorized for this Request`,\r\n  //   }).then(()=>{\r\n  //     authServices.logOut();\r\n  //   })\r\n  // }\r\n\r\n  //   if(error.response.status === 500 ){\r\n  //   Swal.fire({\r\n  //     icon: 'error',\r\n  //     title: 'Oops...',\r\n  //     text: `Oops Something Went Wrong`,\r\n  //   })\r\n\r\n  // }\r\n  \r\n\r\n\r\n return Promise.reject(error)\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C;AACA,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1BA,KAAK,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,QAAQ,IAAG;EACzCC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAChD,OAAOJ,QAAQ;AACjB,CAAC,EAAEK,KAAK,IAAI;EACVJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,mBAAmB,CAAC;EACnDC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACH,KAAK,CAAC;EAC3B,OAAOI,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CAAC,CACA;;AAED;AACAT,KAAK,CAACC,YAAY,CAACG,QAAQ,CAACD,GAAG,CAAEC,QAAQ,IAAG;EAC1CC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,mBAAmB,CAAC;EACnD,OAAON,QAAQ;AACjB,CAAC,EAAEK,KAAK,IAAG;EACTJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,mBAAmB,CAAC;;EAEnD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAID,OAAOG,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC7B,CAAC,CAAC;AAQF,MAAMM,IAAI,GAAGlB,QAAQ,CAACmB,UAAU,CAACX,QAAQ,CAACY,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEF,IAAI,CAACG,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AAAG;EAAA;EAAA;EAAA;AAAA,QACU,CACpB;;AAED;AACA;AACA;AACAnB,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}