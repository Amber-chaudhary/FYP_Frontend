{"ast":null,"code":"import GenericServices from \"./GenericServices\";\n// import jwt_decode from \"jwt-decode\";\n\nclass AuthServices extends GenericServices {\n  constructor() {\n    super();\n    this.login = (email, password) => {\n      return new Promise((resolve, reject) => {\n        this.post(\"/signInAsBuyer\", {\n          email,\n          password\n        }).then(token => {\n          localStorage.setItem(\"token\", token);\n          window.location.reload();\n          window.location.href = \"/\";\n          resolve(token);\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    };\n    this.register = data => this.post(\"/signUp\", data);\n    this.logOut = () => {\n      localStorage.clear();\n      window.location.reload();\n      window.location.href = \"/login\";\n    };\n    this.isLogged = () => {\n      return localStorage.getItem(\"token\") ? true : false;\n    };\n  }\n\n  // isAdmin = ()=>{\n\n  //     let token = localStorage.getItem(\"token\");\n  //      if(!token)\n  //         return false;\n\n  //     let decoded = jwt_decode(token);\n  //     if(decoded.role == \"admin\")\n  //         return true;\n\n  //     return false;\n  // }\n}\n\nlet authServices = new AuthServices();\nexport default authServices;","map":{"version":3,"names":["GenericServices","AuthServices","constructor","login","email","password","Promise","resolve","reject","post","then","token","localStorage","setItem","window","location","reload","href","catch","err","register","data","logOut","clear","isLogged","getItem","authServices"],"sources":["C:/Users/hp/Desktop/FYP-FrontEnd/FYP_Frontend/FYP Bespoke/src/Services/AuthServices.js"],"sourcesContent":["import GenericServices from \"./GenericServices\"\r\n// import jwt_decode from \"jwt-decode\";\r\n\r\nclass AuthServices extends GenericServices{\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    login = (email ,password) => {\r\n        return new Promise ((resolve,reject)=>{\r\n            this.post(\"/signInAsBuyer\",{email, password}).then((token)=>{\r\n                localStorage.setItem(\"token\",token)\r\n                window.location.reload();\r\n                window.location.href=\"/\";\r\n                resolve(token);\r\n            }).catch((err)=>{\r\n                reject(err);\r\n            })\r\n        })\r\n    };\r\n\r\n    register = (data) =>this.post(\"/signUp\",data);\r\n\r\n    logOut = ()=>{\r\n        localStorage.clear();\r\n        window.location.reload();\r\n        window.location.href=\"/login\";\r\n    }\r\n    \r\n    isLogged = ()=>{\r\n        return localStorage.getItem(\"token\")? true : false ;\r\n    }\r\n\r\n    // isAdmin = ()=>{\r\n        \r\n    //     let token = localStorage.getItem(\"token\");\r\n    //      if(!token)\r\n    //         return false;\r\n        \r\n    //     let decoded = jwt_decode(token);\r\n    //     if(decoded.role == \"admin\")\r\n    //         return true;\r\n\r\n    //     return false;\r\n    // }\r\n\r\n    \r\n\r\n\r\n}\r\n\r\nlet authServices = new AuthServices();\r\nexport default authServices;"],"mappings":"AAAA,OAAOA,eAAe,MAAM,mBAAmB;AAC/C;;AAEA,MAAMC,YAAY,SAASD,eAAe;EACtCE,WAAW,GAAE;IACT,KAAK,EAAE;IAAC,KAGZC,KAAK,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;MACzB,OAAO,IAAIC,OAAO,CAAE,CAACC,OAAO,EAACC,MAAM,KAAG;QAClC,IAAI,CAACC,IAAI,CAAC,gBAAgB,EAAC;UAACL,KAAK;UAAEC;QAAQ,CAAC,CAAC,CAACK,IAAI,CAAEC,KAAK,IAAG;UACxDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACF,KAAK,CAAC;UACnCG,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;UACxBF,MAAM,CAACC,QAAQ,CAACE,IAAI,GAAC,GAAG;UACxBV,OAAO,CAACI,KAAK,CAAC;QAClB,CAAC,CAAC,CAACO,KAAK,CAAEC,GAAG,IAAG;UACZX,MAAM,CAACW,GAAG,CAAC;QACf,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;IAAA,KAEDC,QAAQ,GAAIC,IAAI,IAAI,IAAI,CAACZ,IAAI,CAAC,SAAS,EAACY,IAAI,CAAC;IAAA,KAE7CC,MAAM,GAAG,MAAI;MACTV,YAAY,CAACW,KAAK,EAAE;MACpBT,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MACxBF,MAAM,CAACC,QAAQ,CAACE,IAAI,GAAC,QAAQ;IACjC,CAAC;IAAA,KAEDO,QAAQ,GAAG,MAAI;MACX,OAAOZ,YAAY,CAACa,OAAO,CAAC,OAAO,CAAC,GAAE,IAAI,GAAG,KAAK;IACtD,CAAC;EAzBD;;EA2BA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;AAKJ;;AAEA,IAAIC,YAAY,GAAG,IAAIzB,YAAY,EAAE;AACrC,eAAeyB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}